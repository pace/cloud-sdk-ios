include:
  - local: "ExampleApp/.gitlab-ci.yml"

variables:
  PROJECT_PATH: "PACECloudSDK"
  PROJECT_NAME: "PACECloudSDK"
  SIMULATOR_SDK: "iphonesimulator"
  DEVICE_SDK: "iphoneos"
  REPO_PLATFORM: "ios"
  REPO_BASE_URL: "https://repo.dev.k8s.pacelink.net/api"
  REPO_PROJECT_ID: ""

stages:
  - test
  - build
  - publish

before_script:
  - bundle install || true
  - export TAG_COMMIT_TIME=$(git show -s --format=%ct $CI_COMMIT_SHA)
  - echo "Commit time to be used as build number:" $TAG_COMMIT_TIME
  - export BUILD_NUMBER=$(TZ=Etc/Utc date -j -f '%s' ${TAG_COMMIT_TIME} "+%Y%m%d%H")
  - export VERSION_NAME=$(TZ=Etc/Utc date -j -f '%s' ${TAG_COMMIT_TIME} "+%y.%V.%u")
  - echo "Building version $VERSION_NAME with build number $BUILD_NUMBER"
  - export TAG_NAME=${CI_COMMIT_TAG:-'2.0.0'}
  - echo "Current tag version $TAG_NAME"

## Infrastructure
.xcode_version:
  tags:
    - m1-xcode-13

### PLists
.plist:
  extends: .xcode_version
  stage: test
  before_script:
    - echo "Ignore global before_script"
  after_script:
    - echo "Ignore global after_script"
  script:
    - cd $PROJECT_PATH
    - find . -name "*.strings" -size +0 -print0 | xargs -0 plutil -lint
  only:
    refs:
      - merge_requests

### Unit tests
.unit_test:
  extends: .xcode_version
  stage: test
  script:
    - cd $PROJECT_PATH
    - bundle exec fastlane test
  allow_failure: false
  only:
    refs:
      - merge_requests
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /WIP/

### Code style
.code_style:
  extends: .xcode_version
  stage: test
  before_script:
    - echo "Ignore global before_script"
  after_script:
    - echo "Ignore global after_script"
  script:
    - cd $PROJECT_PATH
    - swiftlint
  only:
    refs:
      - merge_requests

### Build
.review:
  extends: .xcode_version
  stage: build
  script:
    - xcodebuild -scheme $TARGET_SCHEME -sdk $SIMULATOR_SDK
  only:
    - merge_requests
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /WIP/

.xcframework: &xcframework
  script:
    - bundle exec fastlane set_version version_number:$TAG_NAME
    - xcodebuild archive
      -scheme $PROJECT_NAME
      -sdk $DEVICE_SDK
      -archivePath "archives/ios_devices.xcarchive" BUILD_LIBRARY_FOR_DISTRIBUTION=YES SKIP_INSTALL=NO
    - xcodebuild archive
      -scheme $PROJECT_NAME
      -sdk $SIMULATOR_SDK
      -archivePath "archives/ios_simulators.xcarchive" BUILD_LIBRARY_FOR_DISTRIBUTION=YES SKIP_INSTALL=NO
    - xcodebuild
      -create-xcframework
      -framework archives/ios_devices.xcarchive/Products/Library/Frameworks/$PROJECT_NAME.framework
      -framework archives/ios_simulators.xcarchive/Products/Library/Frameworks/$PROJECT_NAME.framework
      -output build/${PROJECT_NAME}.xcframework

pacecloudsdk_plists:
 extends: .plist

pacecloudsdk_code_style:
 extends: .code_style
 variables:
   PROJECT_PATH: "."

pacecloudsdk_unit_tests:
 extends: .unit_test
 variables:
   PROJECT_PATH: "."

## Build framework
framework_review:
  extends: .review
  stage: build
  variables:
    TARGET_SCHEME: "PACECloudSDK"

framework_slim_review:
  extends: .review
  stage: build
  variables:
    TARGET_SCHEME: "PACECloudSlimSDK"

framework_watch_review:
  extends: .review
  stage: build
  variables:
    SIMULATOR_SDK: "watchsimulator"
    TARGET_SCHEME: "PACECloudWatchSDK"

## Build xcframework
framework_release_build:
  extends: .xcode_version
  stage: build
  <<: *xcframework
  only:
    - tags
  artifacts:
    name: $PROJECT_NAME
    paths:
      - ./build/
    expire_in: 1 week

## Build watch xcframework
framework_watch_release_build:
  extends: .xcode_version
  variables:
    PROJECT_NAME: "PACECloudWatchSDK"
    SIMULATOR_SDK: "watchsimulator"
    DEVICE_SDK: "watchos"
  stage: build
  <<: *xcframework
  only:
    - merge_requests
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /WIP/
  artifacts:
    name: "PACECloudWatchSDK"
    paths:
      - ./build/
    expire_in: 1 week
  when: manual

# Update CocoaPods trunk
framework_publish_pods:
  extends: .xcode_version
  stage: publish
  script:
    - pod trunk push PACECloudSDK.podspec --allow-warnings
  only:
    - tags

# Documentation
documentation:
  extends: .xcode_version
  stage: build
  script:
    - jazzy
    - zip -r ios-pace-cloud-sdk-$TAG_NAME.zip generated/docs/*
  only:
    - tags
  allow_failure: true
  artifacts:
    paths:
      - ./*.zip
    name: "ios-pace-cloud-sdk-$TAG_NAME.zip"
    expire_in: 1 week

# GitHub Release
framework_publish_github:
  script:
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@${COMMON_REPO} tmp/common
    - pip3 install -r tmp/common/scripts/tags/requirements.txt
    - python3 tmp/common/scripts/tags/create_github_release.py -d pace/cloud-sdk-ios
  tags:
    - xcode-12.4
  allow_failure: true
  stage: publish
  only:
    - tags
  when: manual
