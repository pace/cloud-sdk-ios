include:
  - local: "ExampleApp/.gitlab-ci.yml"
  - local: "FuelingExampleApp/.gitlab-ci.yml"

variables:
  PROJECT_PATH: "PACECloudSDK"
  PROJECT_NAME: "PACECloudSDK"
  SIMULATOR_SDK: "iphonesimulator"
  DEVICE_SDK: "iphoneos"

stages:
  - test
  - build
  - publish

before_script:
  - bundle install || true
  - export TAG_COMMIT_TIME=$(git show -s --format=%ct $CI_COMMIT_SHA)
  - echo "Commit time to be used as build number:" $TAG_COMMIT_TIME
  - export BUILD_NUMBER=$(TZ=Etc/Utc date -j -f '%s' ${TAG_COMMIT_TIME} "+%Y%m%d%H")
  - export VERSION_NAME=$(TZ=Etc/Utc date -j -f '%s' ${TAG_COMMIT_TIME} "+%y.%V.%u")
  - echo "Building version $VERSION_NAME with build number $BUILD_NUMBER"
  - export TAG_NAME=${CI_COMMIT_TAG:-'2.0.0'}
  - echo "Current tag version $TAG_NAME"

## Infrastructure
.xcode_version:
  tags:
    - m1-xcode-16

### PLists
.plist:
  extends: .xcode_version
  stage: test
  before_script:
    - echo "Ignore global before_script"
  after_script:
    - echo "Ignore global after_script"
  script:
    - cd $PROJECT_PATH
    - find . -name "*.strings" -size +0 -print0 | xargs -0 plutil -lint
  only:
    refs:
      - merge_requests
  interruptible: true

### Unit tests
.unit_test:
  extends: .xcode_version
  stage: test
  script:
    - cd $PROJECT_PATH
    - bundle exec fastlane test
  allow_failure: false
  only:
    - merge_requests
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /WIP/
  interruptible: true

### Code style
.code_style:
  extends: .xcode_version
  stage: test
  before_script:
    - echo "Ignore global before_script"
  after_script:
    - echo "Ignore global after_script"
  script:
    - swiftlint
  only:
    refs:
      - merge_requests
  interruptible: true

### Build
.review:
  extends: .xcode_version
  stage: build
  script:
    - xcodebuild -scheme $TARGET_SCHEME -sdk $SIMULATOR_SDK -skipPackagePluginValidation -skipMacroValidation | xcpretty
  only:
    - merge_requests
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /WIP/
  interruptible: true

### Commit format
commit_format:
  stage: test
  before_script:
    - echo "Ignore global before_script"
  after_script:
    - echo "Ignore global after_script"
  script:
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@${GIT_BASE_URL}/pace/mobile/common.git tmp/common
    - python3 tmp/common/scripts/validate_commit.py --project-id $CI_PROJECT_ID --merge-request-iid $CI_MERGE_REQUEST_IID
  only:
    - merge_requests
  tags:
    - xcode-12.4
  interruptible: true

pacecloudsdk_plists:
 extends: .plist

pacecloudsdk_code_style:
  extends: .code_style

pacecloudsdk_unit_tests:
  extends: .unit_test
  variables:
    PROJECT_PATH: "."

# Build framework
framework_review:
  extends: .review
  stage: build
  variables:
    TARGET_SCHEME: "PACECloudSDK"

framework_slim_review:
  extends: .review
  stage: build
  variables:
    TARGET_SCHEME: "PACECloudSlimSDK"

framework_watch_review:
  extends: .review
  stage: build
  variables:
    SIMULATOR_SDK: "watchsimulator"
    TARGET_SCHEME: "PACECloudWatchSDK"

## Build all xcframeworks for releases
.framework_release:
  extends: .xcode_version
  stage: build
  script:
    - ./scripts/build_xcframework.sh $PROJECT_NAME $DEVICE_SDK $SIMULATOR_SDK
  interruptible: true
  artifacts:
    name: $PROJECT_NAME
    paths:
      - ./build/
    expire_in: 1 day

framework_release_build:
  extends: .framework_release
  rules:
    - if: $SCHEDULED_JOB == "pacecloudsdk-release"

framework_slim_release_build:
  extends: .framework_release
  rules:
    - if: $CI_COMMIT_BRANCH == "master" && $SCHEDULED_JOB != "pacecloudsdk-release"
      when: manual
    - if: $SCHEDULED_JOB == "pacecloudsdk-release"
  variables:
    PROJECT_NAME: "PACECloudSlimSDK"

framework_watch_release_build:
  extends: .framework_release
  rules:
    - if: $CI_COMMIT_BRANCH == "master" && $SCHEDULED_JOB != "pacecloudsdk-release"
      when: manual
    - if: $SCHEDULED_JOB == "pacecloudsdk-release"
  variables:
    PROJECT_NAME: "PACECloudWatchSDK"
    SIMULATOR_SDK: "watchsimulator"
    DEVICE_SDK: "watchos"

# Dev Review Deployment
deploy_dev_review:
  extends: .xcode_version
  stage: publish
  script:
    - ./scripts/deploy_dev_review.sh $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME
  only:
    refs:
      - merge_requests
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /WIP/
  when: manual
  interruptible: true

# Prod Deployment
deploy_prod:
  extends: .xcode_version
  stage: publish
  rules:
    - if: $SCHEDULED_JOB == "pacecloudsdk-release"
  script:
    - ./scripts/deploy_prod.sh build/PACECloudSDK.zip build/PACECloudSlimSDK.zip build/PACECloudWatchSDK.zip
  interruptible: true
  when: manual
  dependencies:
    - framework_release_build
    - framework_slim_release_build
    - framework_watch_release_build

# Documentation
documentation:
  extends: .xcode_version
  stage: build
  script:
    - xcodebuild docbuild -scheme $TARGET_SCHEME -sdk $SIMULATOR_SDK -skipPackagePluginValidation -skipMacroValidation | xcpretty
    - find ~/Library/Developer/Xcode/DerivedData
      -name "$TARGET_SCHEME.doccarchive"
      -exec cp -R {} ./docs \;
  rules:
    - if: $SCHEDULED_JOB == "pacecloudsdk-release"
  allow_failure: true
  variables:
    TARGET_SCHEME: "PACECloudSDK"
  artifacts:
    paths:
      - ./docs/${TARGET_SCHEME}.doccarchive
    name: "ios-pace-cloud-sdk"
    expire_in: 1 week