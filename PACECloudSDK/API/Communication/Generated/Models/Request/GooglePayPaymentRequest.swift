//
// Generated by SwiftPoet
// https://github.com/outfoxx/swiftpoet
//
import Foundation

public extension API.Communication {
    /**
     * The Google Pay payment request to be handled (Android only). */
    struct GooglePayPaymentRequest: Codable {
        /**
         * Major API version. The value is 2 for this specification. */
        public let apiVersion: Int?
        /**
         * Minor API version. The value is 0 for this specification. */
        public let apiVersionMinor: Int?
        /**
         * Information about the merchant that requests payment data. */
        public let merchantInfo: MerchantInfo?
        /**
         * Specifies support for one or more payment methods supported by the Google Pay API. */
        public let allowedPaymentMethods: [AllowedPaymentMethodsElement]?
        /**
         * Details about the authorization of the transaction based upon whether the user agrees to the transaction or not. Includes total price and price status. */
        public let transactionInfo: TransactionInfo

        public struct MerchantInfo: Codable {
            /**
             * Merchant name encoded as UTF-8. Merchant name is rendered in the payment sheet. */
            public let merchantName: String?
            /**
             * A Google merchant identifier issued after registration with the Google Pay and Wallet Console. Required when PaymentsClient is initialized with an environment property of PRODUCTION. The merchantID can have 12-18 characters. */
            public let merchantId: String?
        }

        public struct AllowedPaymentMethodsElement: Codable {
            /**
             * A short identifier for the supported payment method. CARD is the only supported value for this parameter. */
            public let type: String?
            /**
             * Parameters required to configure the provided payment method type. */
            public let parameters: Parameters
            /**
             * Configure an account or decryption provider to receive payment information. This property is required for the CARD payment method. */
            public let tokenizationSpecification: TokenizationSpecification?

            public struct Parameters: Codable {
                /**
                 * Fields supported to authenticate a card transaction. */
                public let allowedAuthMethods: [String]
                /**
                 * One or more card networks that you support, also supported by the Google Pay API, e.g. MASTERCARD, VISA */
                public let allowedCardNetworks: [String]
                /**
                 * Set to false if you don't support prepaid cards. The prepaid card class is supported for the card networks specified by default. */
                public let allowPrepaidCards: Bool?
                /**
                 * Set to false if you don't support credit cards. The credit card class is supported for the card networks specified by default. */
                public let allowCreditCards: Bool?
                /**
                 * Set to true to request assuranceDetails. This object provides information about the validation performed on the returned payment data. */
                public let assuranceDetailsRequired: Bool?
                /**
                 * Set to true if you require a billing address. A billing address should only be requested if it's required to process the transaction. Additional data requests can increase friction in the checkout process and lead to a lower conversion rate. */
                public let billingAddressRequired: Bool?
                /**
                 * This object allows you to set additional fields to be returned for a requested billing address. */
                public let billingAddressParameters: BillingAddressParameters?

                public struct BillingAddressParameters: Codable {
                    /**
                     * Billing address format required to complete the transaction. */
                    public let format: String?
                    /**
                     * Set to true if a phone number is required to process the transaction. */
                    public let phoneNumberRequired: Bool?
                }
            }

            public struct TokenizationSpecification: Codable {
                /**
                 * A payment method tokenization type is supported for the given PaymentMethod. For CARD payment method, use PAYMENT_GATEWAY or DIRECT. */
                public let type: String
                /**
                 * Parameters specific to the selected payment method tokenization type. */
                public let parameters: Parameters

                public struct Parameters: Codable {
                    /**
                     * The version of the encryption/signature protocol expected in the response. Currently, ECv2 is supported. Required for DIRECT type. */
                    public let protocolVersion: String?
                    /**
                     * Base64-encoded elliptic curve public key. Required for DIRECT type. */
                    public let publicKey: String?
                    /**
                     * The payment gateway name of the provider. Required for GATEWAY type. */
                    public let gateway: String?
                    /**
                     * Gateway merchant ID provided by payment provider. Required for GATEWAY type. */
                    public let gatewayMerchantId: String?
                }
            }
        }

        public struct TransactionInfo: Codable {
            /**
             * The ISO 4217 alphabetic currency code of the payment request. */
            public let currencyCode: String
            /**
             * The ISO 3166-1 alpha-2 country codes country code of the payment request, e.g. DE */
            public let countryCode: String
            /**
             * A unique ID that identifies a transaction attempt. Merchants can use an existing ID or generate a specific one for Google Pay transaction attempts. This field is required when you send callbacks to the Google Transaction Events API. */
            public let transactionId: String?
            /**
             * The status of the total price used */
            public let totalPriceStatus: String
            /**
             * Total monetary value of the transaction with an optional decimal precision of two decimal places. The format of the string should follow the regex format ^[0-9]+(\.[0-9][0-9])?$ */
            public let totalPrice: String
            /**
             * Custom label for the total price within the display items. */
            public let totalPriceLabel: String?
            /**
             * Affects the submit button text displayed in the Google Pay payment sheet. */
            public let checkoutOption: String?
        }
    }
}
