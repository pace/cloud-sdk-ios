//
// Generated by SwiftPoet
// https://github.com/outfoxx/swiftpoet
//
import Foundation

public extension API.Communication {
    /**
     * Requests a collection of the supported version and operations. */
    struct IntrospectResponse: Codable {
        /**
         * The communication version. */
        public let version: String
        /**
         * The supported operations. */
        public let operations: [String]

        public init(version: String, operations: [String]) {
            self.version = version
            self.operations = operations
        }
    }
}

extension API.Communication {
    class IntrospectError: Error {}

    class IntrospectResult: Result {
        init(_ success: Success) {
            super.init(status: 200, body: .init(success.response))
        }

        init(_ failure: Failure) {
            super.init(status: failure.statusCode.rawValue, body: .init(failure.response))
        }

        struct Success {
            let response: IntrospectResponse
        }

        struct Failure {
            let statusCode: StatusCode
            let response: IntrospectError

            enum StatusCode: Int {
                case badRequest = 400
                case requestTimeout = 408
                case internalServerError = 500
            }
        }
    }
}
