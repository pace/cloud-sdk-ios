//
// Generated by SwiftPoet
// https://github.com/outfoxx/swiftpoet
//
import Foundation

public extension API.Communication {
    /**
     * Asks the client for optional attachments to be included in the fueling receipt. */
    struct ReceiptAttachmentsResponse: Codable {
        /**
         * The attachments. Each item represents a new line on the receipt. */
        public let attachments: [String]?

        public init(attachments: [String]?) {
            self.attachments = attachments
        }
    }
}

extension API.Communication {
    class ReceiptAttachmentsError: Error {}

    class ReceiptAttachmentsResult: Result {
        init(_ success: Success) {
            super.init(status: 200, body: .init(success.response))
        }

        init(_ failure: Failure) {
            super.init(status: failure.statusCode.rawValue, body: .init(failure.response))
        }

        struct Success {
            let response: ReceiptAttachmentsResponse
        }

        struct Failure {
            let statusCode: StatusCode
            let response: ReceiptAttachmentsError

            enum StatusCode: Int {
                case badRequest = 400
                case requestTimeout = 408
                case internalServerError = 500
            }
        }
    }
}
