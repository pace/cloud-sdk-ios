//
// Generated by SwiftPoet
// https://github.com/outfoxx/swiftpoet
//
import Foundation

public extension API.Communication {
    /**
     * Some services (e.g. Paypal) will be opened independently from the web app, see "openURLInNewTab".
     * On completion, the flow will be redirected to the schema provided to this request.
     * This needs to be a unique identifier, e.g. "pace.some_uuid".
     */
    struct AppInterceptableLinkResponse: Codable {
        /**
         * The redirect schema */
        public let link: String

        public init(link: String) {
            self.link = link
        }
    }
}

extension API.Communication {
    class AppInterceptableLinkError: Error {}

    class AppInterceptableLinkResult: Result {
        init(_ success: Success) {
            super.init(status: 200, body: .init(success.response))
        }

        init(_ failure: Failure) {
            super.init(status: failure.statusCode.rawValue, body: .init(failure.response))
        }

        struct Success {
            let response: AppInterceptableLinkResponse
        }

        struct Failure {
            let statusCode: StatusCode
            let response: AppInterceptableLinkError

            enum StatusCode: Int {
                case badRequest = 400
                case notFound = 404
                case requestTimeout = 408
                case internalServerError = 500
            }
        }
    }
}
