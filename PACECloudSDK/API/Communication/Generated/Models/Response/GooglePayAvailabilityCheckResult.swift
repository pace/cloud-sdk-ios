//
// Generated by SwiftPoet
// https://github.com/outfoxx/swiftpoet
//
import Foundation

public extension API.Communication {
    /**
     * Requests, if Google Pay is ready to be used (enabled + cards onboarded; Android only) */
    struct GooglePayAvailabilityCheckResponse: Codable {
        /**
         * The status if Google Pay is ready to be used. */
        public let isAvailable: Bool

        public init(isAvailable: Bool) {
            self.isAvailable = isAvailable
        }
    }
}

extension API.Communication {
    class GooglePayAvailabilityCheckError: Error {}

    class GooglePayAvailabilityCheckResult: Result {
        init(_ success: Success) {
            super.init(status: 200, body: .init(success.response))
        }

        init(_ failure: Failure) {
            super.init(status: failure.statusCode.rawValue, body: .init(failure.response))
        }

        struct Success {
            let response: GooglePayAvailabilityCheckResponse
        }

        struct Failure {
            let statusCode: StatusCode
            let response: GooglePayAvailabilityCheckError

            enum StatusCode: Int {
                case badRequest = 400
                case requestTimeout = 408
                case clientClosedRequest = 499
                case internalServerError = 500
            }
        }
    }
}
