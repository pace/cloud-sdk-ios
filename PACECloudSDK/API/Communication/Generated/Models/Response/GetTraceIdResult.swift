//
// Generated by SwiftPoet
// https://github.com/outfoxx/swiftpoet
//
import Foundation

public extension API.Communication {
    /**
     * Requests a unique identifier for the user session for tracing purposes.
     * This must return a new unique value on every call.
     */
    struct GetTraceIdResponse: Codable {
        /**
         * The unique tracing id */
        public let value: String

        public init(value: String) {
            self.value = value
        }
    }
}

extension API.Communication {
    class GetTraceIdError: Error {}

    class GetTraceIdResult: Result {
        init(_ success: Success) {
            super.init(status: 200, body: .init(success.response))
        }

        init(_ failure: Failure) {
            super.init(status: failure.statusCode.rawValue, body: .init(failure.response))
        }

        struct Success {
            let response: GetTraceIdResponse
        }

        struct Failure {
            let statusCode: StatusCode
            let response: GetTraceIdError

            enum StatusCode: Int {
                case badRequest = 400
                case requestTimeout = 408
                case internalServerError = 500
            }
        }
    }
}
