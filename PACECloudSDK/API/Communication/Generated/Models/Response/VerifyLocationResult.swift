//
// Generated by SwiftPoet
// https://github.com/outfoxx/swiftpoet
//
import Foundation

public extension API.Communication {
    /**
     * In specific situations the app needs the user's current location to be verified in order to continue its flow. */
    struct VerifyLocationResponse: Codable {
        /**
         * The verification status. */
        public let verified: Bool
        /**
         * The accuracy of the location that was verified (if available). */
        public let accuracy: Double?

        public init(verified: Bool, accuracy: Double?) {
            self.verified = verified
            self.accuracy = accuracy
        }
    }
}

extension API.Communication {
    class VerifyLocationError: Error {}

    class VerifyLocationResult: Result {
        init(_ success: Success) {
            super.init(status: 200, body: .init(success.response))
        }

        init(_ failure: Failure) {
            super.init(status: failure.statusCode.rawValue, body: .init(failure.response))
        }

        struct Success {
            let response: VerifyLocationResponse
        }

        struct Failure {
            let statusCode: StatusCode
            let response: VerifyLocationError

            enum StatusCode: Int {
                case badRequest = 400
                case notFound = 404
                case requestTimeout = 408
                case internalServerError = 500
            }
        }
    }
}
