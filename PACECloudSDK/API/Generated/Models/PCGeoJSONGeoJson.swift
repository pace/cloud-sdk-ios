//
// Generated by SwagGen
// https://github.com/pace/SwagGen
//

import Foundation

public class PCGeoJSONGeoJson: APIModel {

    /** The GeoJSON type */
    public enum PCGeoJSONType: String, Codable, Equatable, CaseIterable {
        case featureCollection = "FeatureCollection"
    }

    public var features: [PCGeoJSONGeoJsonFeature]?

    /** The GeoJSON type */
    public var type: PCGeoJSONType?

    public init(features: [PCGeoJSONGeoJsonFeature]? = nil, type: PCGeoJSONType? = nil) {
        self.features = features
        self.type = type
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        features = try container.decodeArrayIfPresent("features")
        type = try container.decodeIfPresent("type")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(features, forKey: "features")
        try container.encodeIfPresent(type, forKey: "type")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? PCGeoJSONGeoJson else { return false }
      guard self.features == object.features else { return false }
      guard self.type == object.type else { return false }
      return true
    }

    public static func == (lhs: PCGeoJSONGeoJson, rhs: PCGeoJSONGeoJson) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
