//
// Generated by SwagGen
// https://github.com/pace/SwagGen
//

import Foundation

public class PCPOIReferenceStatus: APIModel {

    /** Type */
    public enum PCPOIType: String, Codable, Equatable, CaseIterable {
        case referenceStatus = "referenceStatus"
    }

    /** Availability status of the referenced resource */
    public enum PCPOIStatus: String, Codable, Equatable, CaseIterable {
        case online = "online"
        case offline = "offline"
    }

    /** Service Provider PRN */
    public var id: String?

    /** Type */
    public var type: PCPOIType?

    /** Availability status of the referenced resource */
    public var status: PCPOIStatus?

    /** Time of status last update (iso8601) */
    public var updatedAt: DateTime?

    public init(id: String? = nil, type: PCPOIType? = nil, status: PCPOIStatus? = nil, updatedAt: DateTime? = nil) {
        self.id = id
        self.type = type
        self.status = status
        self.updatedAt = updatedAt
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        id = try container.decodeIfPresent("id")
        type = try container.decodeIfPresent("type")
        status = try container.decodeIfPresent("status")
        updatedAt = try container.decodeIfPresent("updatedAt")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(id, forKey: "id")
        try container.encodeIfPresent(type, forKey: "type")
        try container.encodeIfPresent(status, forKey: "status")
        try container.encodeIfPresent(updatedAt, forKey: "updatedAt")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? PCPOIReferenceStatus else { return false }
      guard self.id == object.id else { return false }
      guard self.type == object.type else { return false }
      guard self.status == object.status else { return false }
      guard self.updatedAt == object.updatedAt else { return false }
      return true
    }

    public static func == (lhs: PCPOIReferenceStatus, rhs: PCPOIReferenceStatus) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
