//
// Generated by SwagGen
// https://github.com/pace/SwagGen
//

import Foundation

public class PCFuelingDiscount: APIModel {

    /** Type */
    public enum PCFuelingType: String, Codable, Equatable, CaseIterable {
        case discount = "discount"
    }

    /** Discount ID */
    public var id: ID?

    /** Type */
    public var type: PCFuelingType?

    /** Amount in the currency of the pumps ready to pay amount */
    public var amount: Decimal?

    /** Human readable name of the discount provider */
    public var provider: String?

    /** Line item */
    public var title: String?

    public init(id: ID? = nil, type: PCFuelingType? = nil, amount: Decimal? = nil, provider: String? = nil, title: String? = nil) {
        self.id = id
        self.type = type
        self.amount = amount
        self.provider = provider
        self.title = title
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        id = try container.decodeIfPresent("id")
        type = try container.decodeIfPresent("type")
        amount = try container.decodeLosslessDecimal("amount")
        provider = try container.decodeIfPresent("provider")
        title = try container.decodeIfPresent("title")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(id, forKey: "id")
        try container.encodeIfPresent(type, forKey: "type")
        try container.encodeIfPresent(amount, forKey: "amount")
        try container.encodeIfPresent(provider, forKey: "provider")
        try container.encodeIfPresent(title, forKey: "title")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? PCFuelingDiscount else { return false }
      guard self.id == object.id else { return false }
      guard self.type == object.type else { return false }
      guard self.amount == object.amount else { return false }
      guard self.provider == object.provider else { return false }
      guard self.title == object.title else { return false }
      return true
    }

    public static func == (lhs: PCFuelingDiscount, rhs: PCFuelingDiscount) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
