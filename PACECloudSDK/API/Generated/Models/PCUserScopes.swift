//
// Generated by SwagGen
// https://github.com/pace/SwagGen
//

import Foundation

public class PCUserScopes: APIModel {

    public enum PCUserType: String, Codable, Equatable, CaseIterable {
        case scopes = "scopes"
    }

    public var id: String?

    public var type: PCUserType?

    public var scopes: [String]?

    public init(id: String? = nil, type: PCUserType? = nil, scopes: [String]? = nil) {
        self.id = id
        self.type = type
        self.scopes = scopes
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        id = try container.decodeIfPresent("id")
        type = try container.decodeIfPresent("type")
        scopes = try container.decodeArrayIfPresent("scopes")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(id, forKey: "id")
        try container.encodeIfPresent(type, forKey: "type")
        try container.encodeIfPresent(scopes, forKey: "scopes")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? PCUserScopes else { return false }
      guard self.id == object.id else { return false }
      guard self.type == object.type else { return false }
      guard self.scopes == object.scopes else { return false }
      return true
    }

    public static func == (lhs: PCUserScopes, rhs: PCUserScopes) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
