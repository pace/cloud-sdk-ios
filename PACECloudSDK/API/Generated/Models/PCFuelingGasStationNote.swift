//
// Generated by SwagGen
// https://github.com/pace/SwagGen
//

import Foundation

public class PCFuelingGasStationNote: APIModel {

    public enum PCFuelingType: String, Codable, Equatable, CaseIterable {
        case gasStationNote = "gasStationNote"
    }

    /** Gas Station Note's ID */
    public var id: ID?

    public var type: PCFuelingType?

    public var info: String?

    public var name: String?

    public var text: String?

    public init(id: ID? = nil, type: PCFuelingType? = nil, info: String? = nil, name: String? = nil, text: String? = nil) {
        self.id = id
        self.type = type
        self.info = info
        self.name = name
        self.text = text
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        id = try container.decodeIfPresent("id")
        type = try container.decodeIfPresent("type")
        info = try container.decodeIfPresent("info")
        name = try container.decodeIfPresent("name")
        text = try container.decodeIfPresent("text")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(id, forKey: "id")
        try container.encodeIfPresent(type, forKey: "type")
        try container.encodeIfPresent(info, forKey: "info")
        try container.encodeIfPresent(name, forKey: "name")
        try container.encodeIfPresent(text, forKey: "text")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? PCFuelingGasStationNote else { return false }
      guard self.id == object.id else { return false }
      guard self.type == object.type else { return false }
      guard self.info == object.info else { return false }
      guard self.name == object.name else { return false }
      guard self.text == object.text else { return false }
      return true
    }

    public static func == (lhs: PCFuelingGasStationNote, rhs: PCFuelingGasStationNote) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
